@mixin clearFix {
	&:after {
		content: "";
		display: block;
		clear: both;
	}
}

@mixin boxSizing($value) {
	box-sizing: $value;
	-moz-box-sizing: $value;
}

@mixin boxShadow($val) {
	box-shadow: $val;
	-webkit-box-shadow: $val;
	-moz-box-shadow: $val;
	-ms-box-shadow: $val;
	-o-box-shadow: $val;
}

@mixin transition($var1) {
	/* Enable hardware acceleration to fix laggy transitions */
	-webkit-transform: translateZ(0);
	-moz-transform: translateZ(0);
	-ms-transform: translateZ(0);
	-o-transform: translateZ(0);
	transform: translateZ(0);

	-webkit-transition: $var1; /* For Safari 3.1 to 6.0 */
	-moz-transition: $var1;
	-ms-transition: $var1;
	-o-transition: $var1;
   	transition: $var1;
}

@mixin transition-delay($var1) {
	-webkit-transition-delay: $var1; /* For Safari 3.1 to 6.0 */
	-moz-transition-delay: $var1;
	-ms-transition-delay: $var1;
	-o-transition-delay: $var1;
   	transition-delay: $var1;
}

@mixin transform($var1) {
	-webkit-transform: $var1;
    -moz-transform: $var1;
    -ms-transform: $var1;
    -o-transform: $var1;
    transform: $var1;
}

@mixin placeholder {
	&::-webkit-input-placeholder {@content}
	&:-moz-placeholder           {@content}
	&::-moz-placeholder          {@content}
	&:-ms-input-placeholder      {@content}
}

@mixin dropdown-menu($numElem) {
	display: block;
	opacity: 0;

	@include boxShadow(0px 3px 20px 2px #343434);

	$ii: 0;
	@for $i from 1 through $numElem {
		&:nth-child(#{$i}) {
			-moz-animation-name: drop;
			-moz-animation-duration: 500ms;
			-moz-animation-timing-function: ease-in-out;
			-moz-animation-delay: 10ms + $ii;
			-moz-animation-fill-mode: forwards;
			-moz-animation-direction: alternate;

			-webkit-animation-name: drop;
			-webkit-animation-duration: 500ms;
			-webkit-animation-timing-function: ease-in-out;
			-webkit-animation-delay: 10ms + $ii;
			-webkit-animation-fill-mode: forwards;
			-webkit-animation-direction: alternate;

			-ms-animation-name: drop;
			-ms-animation-duration: 500ms;
			-ms-animation-timing-function: ease-in-out;
			-ms-animation-delay: 10ms + $ii;
			-ms-animation-fill-mode: forwards;
			-ms-animation-direction: alternate;

			$ii: $ii +150;

			@keyframes drop {
			    0%  {
					opacity: 0.5;
					transform: rotateY(90deg) translateY(10px * $i);
				}
				50% {
					transform: rotateY(-20deg);
					opacity: 1.9;
				}
				100%  {
			    	transform: rotateY(0deg) translateY(0px)s;
					opacity: 1;
				}
			}
		}
	}
}

@mixin button($border, $fill, $text, $h_border, $h_fill, $h_text) {
    border: 1px solid $border;
    background-color: $fill;
    color: $text;

    &:hover {
		border: 1px solid $h_border;
		background-color: $h_fill;
		color: $h_text;
    }

    &:active {
		background-color: darken($h_fill, 15%);
    	border: 1px solid darken($h_border, 15%);
    }
}

@mixin borderRadius($radius) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	-o-border-radius: $radius;
	border-radius: $radius;
}

// Select first nth elements
@mixin first($num) {
	@if $num == 1 {
		&:first-child {
			@content
		}
	} @else {
		&:nth-child(-n + #{$num}) {
			@content;
		}
	}
}

// Select last element
@mixin last() {
	&:last-of-type {
		@content;
	}
}

@mixin even(){
  &:nth-child(even) {
    @content;
  }
}

@mixin odd(){
  &:nth-child(odd) {
    @content;
  }
}

// Select The Last nth Elements
@mixin last($num) {
   &:nth-last-child(-n + #{$num}) {
    @content;
  }
}
